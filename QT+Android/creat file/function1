#这个方法是在QT代码的main.cpp文件中添加一下的代码
运行的结果：模拟机上可以运行并获得了如愿的结果，但是实物机上则运行失败
附上源网站
https://codeantenna.com/a/YNknUvSRKq
注意在.pro文件中添加以下内容
QT       += androidextras
QT       += core-private
---------------------------------main.cpp--------------------------------------------
#include "mainwindow.h"

#include <QApplication>
#include "qdebug.h"
#include <QUrl>
#include <QDir>
#include <QMessageBox>

#include <QAndroidJniObject>
#include <QAndroidJniEnvironment>
#include <QtAndroid>

bool checkPermission()
{//安装程序授权读写权限
    QtAndroid::PermissionResult r = QtAndroid::checkPermission("android.permission.WRITE_EXTERNAL_STORAGE");
    if(r == QtAndroid::PermissionResult::Denied) {
        QtAndroid::requestPermissionsSync( QStringList() << "android.permission.WRITE_EXTERNAL_STORAGE" );
        r = QtAndroid::checkPermission("android.permission.WRITE_EXTERNAL_STORAGE");
        if(r == QtAndroid::PermissionResult::Denied) {
             return false;
        }
   }
   return true;
}


int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    /*-------------------------------------*/
    if(checkPermission())
    {///确定权限
        /* 创建folder文件夹*/
        QDir *folder = new QDir;
        QUrl url("file:///storage/emulated/0/UIDdate");
        QString path = url.toLocalFile();  //获取到的路径
        bool exist = folder->exists(path);

        if(exist)
        {
            QMessageBox::information(0,"found","Dir already exits！");
           qDebug()<<"folder"<<exist;
        }
        else
        {//创建folder文件夹
            bool ok = folder->mkdir(path);
            if(ok)
                QMessageBox::warning(0, "CreateDir", "Create Dir success!");
            else
                QMessageBox::warning(0, "CreateDir", "Create Dir fail");
        }
    }
    /*-------------------------------------*/
    MainWindow w;
    w.show();
    return a.exec();
}
